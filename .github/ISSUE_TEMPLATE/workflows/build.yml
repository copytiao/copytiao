name: Download and Upload to Release (Zip Split)

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag name'
        required: true
      file_url:
        description: 'URL of the file to download'
        required: true
        default: 'https://aka.ms/azurelinux-3.0-x86_64.iso'
      chunk_size:
        description: 'Chunk size in MB'
        required: false
        default: '500m'  # zip 使用 'm' 表示 MB

jobs:
  download-and-upload:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install zip
      run: sudo apt-get update && sudo apt-get install -y zip

    - name: Download file
      run: |
        echo "Downloading file from ${{ github.event.inputs.file_url }}"
        curl -L -o azurelinux.iso "${{ github.event.inputs.file_url }}"
        ls -lh azurelinux.iso

    - name: Create split zip archive
      run: |
        zip -s ${{ github.event.inputs.chunk_size }} --verbose large_file_split.zip large_file.iso

    - name: Get release ID
      id: get_release
      uses: actions/github-script@v6
      with:
        script: |
          try {
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: '${{ github.event.inputs.release_tag }}'
            });
            return release.data.id;
          } catch (error) {
            core.setFailed(`Release not found: ${error}`);
            return -1;
          }

    - name: Upload zip parts to release
      if: steps.get_release.outputs.result != -1
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.repository.html_url }}/releases/${{ steps.get_release.outputs.result }}/assets
        asset_path: ./large_file_split.z*
        asset_name: ${{ github.event.inputs.release_tag }}_part
        overwrite: true

    - name: Clean up
      run: |
        rm -f large_file.iso large_file_split.z*